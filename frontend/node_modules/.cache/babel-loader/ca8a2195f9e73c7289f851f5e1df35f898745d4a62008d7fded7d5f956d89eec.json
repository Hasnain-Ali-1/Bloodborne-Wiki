{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-hasnaindb\\\\frontend\\\\src\\\\CaryllRunesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CaryllRunesPage() {\n  _s();\n  const [caryllRunes, setCaryllRunes] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('/api/caryllRunes');\n        // Convert filepath to Data URL\n        const runesWithBase64 = response.data.map(rune => ({\n          ...rune,\n          filepath: `data:image/png;base64,${rune.filepath}`\n        }));\n        setCaryllRunes(runesWithBase64);\n      } catch (error) {\n        console.error('Error fetching Caryll Runes:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Caryll Runes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"caryll-runes-container\",\n      children: caryllRunes.map(rune => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caryll-rune-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: rune.runeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rune.filepath,\n          alt: rune.runeName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: rune.runeEffect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, rune.runeID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(CaryllRunesPage, \"GhsGD/rmyBv0lYwb1++0WkLEwqM=\");\n_c = CaryllRunesPage;\nexport default CaryllRunesPage;\nvar _c;\n$RefreshReg$(_c, \"CaryllRunesPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CaryllRunesPage","_s","caryllRunes","setCaryllRunes","fetchData","response","get","runesWithBase64","data","map","rune","filepath","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","runeName","src","alt","runeEffect","runeID","_c","$RefreshReg$"],"sources":["D:/project-hasnaindb/frontend/src/CaryllRunesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction CaryllRunesPage() {\r\n  const [caryllRunes, setCaryllRunes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('/api/caryllRunes');\r\n        // Convert filepath to Data URL\r\n        const runesWithBase64 = response.data.map(rune => ({\r\n          ...rune,\r\n          filepath: `data:image/png;base64,${rune.filepath}`\r\n        }));\r\n        setCaryllRunes(runesWithBase64);\r\n      } catch (error) {\r\n        console.error('Error fetching Caryll Runes:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Caryll Runes</h2>\r\n      <div className=\"caryll-runes-container\">\r\n        {caryllRunes.map((rune) => (\r\n          <div key={rune.runeID} className=\"caryll-rune-item\">\r\n            <h3>{rune.runeName}</h3>\r\n            {/* Use Data URL as the source for the image */}\r\n            <img src={rune.filepath} alt={rune.runeName} />\r\n            <p>{rune.runeEffect}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CaryllRunesPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kBAAkB,CAAC;QACpD;QACA,MAAMC,eAAe,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,IAAI,KAAK;UACjD,GAAGA,IAAI;UACPC,QAAQ,EAAG,yBAAwBD,IAAI,CAACC,QAAS;QACnD,CAAC,CAAC,CAAC;QACHR,cAAc,CAACI,eAAe,CAAC;MACjC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnB,OAAA;MAAKoB,SAAS,EAAC,wBAAwB;MAAAL,QAAA,EACpCZ,WAAW,CAACO,GAAG,CAAEC,IAAI,iBACpBX,OAAA;QAAuBoB,SAAS,EAAC,kBAAkB;QAAAL,QAAA,gBACjDf,OAAA;UAAAe,QAAA,EAAKJ,IAAI,CAACU;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAExBnB,OAAA;UAAKsB,GAAG,EAAEX,IAAI,CAACC,QAAS;UAACW,GAAG,EAAEZ,IAAI,CAACU;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CnB,OAAA;UAAAe,QAAA,EAAIJ,IAAI,CAACa;QAAU;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJhBR,IAAI,CAACc,MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CApCQD,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAsCxB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
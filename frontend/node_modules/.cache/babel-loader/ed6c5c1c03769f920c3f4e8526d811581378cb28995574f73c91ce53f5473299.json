{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-hasnaindb\\\\frontend\\\\src\\\\WeaponTypePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArmorTypePage() {\n  _s();\n  const [armorTypes, setArmorTypes] = useState([]);\n  const [activePage, setActivePage] = useState(null);\n  useEffect(() => {\n    // Fetch armor types data from API\n    const fetchArmorTypes = async () => {\n      try {\n        const response = await axios.get('/api/armorTypes');\n        setArmorTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching armor types:', error);\n      }\n    };\n    fetchArmorTypes();\n  }, []);\n  const handleSelectArmorType = armorType => {\n    setActivePage(armorType);\n    // Navigate to the selected armor type\n    window.location.href = `/armor/${armorType.armorTypeID}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Armor Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: armorTypes.map(armorType => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: activePage === armorType ? 'active' : '',\n        onClick: () => handleSelectArmorType(armorType),\n        children: armorType.armorTypeName\n      }, armorType.armorTypeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(ArmorTypePage, \"fRY6wp+0UOeTOFqCKlDfpQX/rzg=\");\n_c = ArmorTypePage;\nexport default ArmorTypePage;\nvar _c;\n$RefreshReg$(_c, \"ArmorTypePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ArmorTypePage","_s","armorTypes","setArmorTypes","activePage","setActivePage","fetchArmorTypes","response","axios","get","data","error","console","handleSelectArmorType","armorType","window","location","href","armorTypeID","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","armorTypeName","_c","$RefreshReg$"],"sources":["D:/project-hasnaindb/frontend/src/WeaponTypePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ArmorTypePage() {\r\n  const [armorTypes, setArmorTypes] = useState([]);\r\n  const [activePage, setActivePage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch armor types data from API\r\n    const fetchArmorTypes = async () => {\r\n      try {\r\n        const response = await axios.get('/api/armorTypes');\r\n        setArmorTypes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching armor types:', error);\r\n      }\r\n    };\r\n\r\n    fetchArmorTypes();\r\n  }, []);\r\n\r\n  const handleSelectArmorType = (armorType) => {\r\n    setActivePage(armorType);\r\n    // Navigate to the selected armor type\r\n    window.location.href = `/armor/${armorType.armorTypeID}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select Armor Type</h2>\r\n      <div className=\"links\">\r\n        {/* Render each armor type as a clickable link */}\r\n        {armorTypes.map((armorType) => (\r\n          <a\r\n            key={armorType.armorTypeID}\r\n            className={activePage === armorType ? 'active' : ''}\r\n            onClick={() => handleSelectArmorType(armorType)}\r\n          >\r\n            {armorType.armorTypeName}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArmorTypePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,iBAAiB,CAAC;QACnDN,aAAa,CAACI,QAAQ,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDL,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,qBAAqB,GAAIC,SAAS,IAAK;IAC3CT,aAAa,CAACS,SAAS,CAAC;IACxB;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAI,UAASH,SAAS,CAACI,WAAY,EAAC;EAC1D,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAL,QAAA,EAEnBjB,UAAU,CAACuB,GAAG,CAAEX,SAAS,iBACxBf,OAAA;QAEEyB,SAAS,EAAEpB,UAAU,KAAKU,SAAS,GAAG,QAAQ,GAAG,EAAG;QACpDY,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAACC,SAAS,CAAE;QAAAK,QAAA,EAE/CL,SAAS,CAACa;MAAa,GAJnBb,SAAS,CAACI,WAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKzB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CAzCQD,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AA2CtB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
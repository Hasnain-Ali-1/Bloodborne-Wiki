{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-hasnaindb\\\\frontend\\\\src\\\\ArmorTypePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArmorTypePage({\n  history\n}) {\n  _s();\n  const [armorTypes, setArmorTypes] = useState([]);\n  useEffect(() => {\n    const fetchArmorTypes = async () => {\n      try {\n        const response = await axios.get('/api/armorTypes');\n        setArmorTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching armor types:', error);\n      }\n    };\n    fetchArmorTypes();\n  }, []);\n  const handleSelectArmorType = armorType => {\n    history.push(`/armor/${armorType.armorTypeID}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Armor Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"armor-type-container\",\n      children: armorTypes.map(armorType => /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `#/armor/${armorType.armorTypeID}`,\n        onClick: () => handleSelectArmorType(armorType),\n        className: \"armor-type-link\" // Add a CSS class for styling\n        ,\n        children: armorType.armorTypeName\n      }, armorType.armorTypeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(ArmorTypePage, \"u8gNbECA54D0nI4g/pnyhVjcqTY=\");\n_c = ArmorTypePage;\nexport default ArmorTypePage;\nvar _c;\n$RefreshReg$(_c, \"ArmorTypePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ArmorTypePage","history","_s","armorTypes","setArmorTypes","fetchArmorTypes","response","get","data","error","console","handleSelectArmorType","armorType","push","armorTypeID","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","href","onClick","armorTypeName","_c","$RefreshReg$"],"sources":["D:/project-hasnaindb/frontend/src/ArmorTypePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ArmorTypePage({ history }) {\r\n  const [armorTypes, setArmorTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchArmorTypes = async () => {\r\n      try {\r\n        const response = await axios.get('/api/armorTypes');\r\n        setArmorTypes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching armor types:', error);\r\n      }\r\n    };\r\n\r\n    fetchArmorTypes();\r\n  }, []);\r\n\r\n  const handleSelectArmorType = (armorType) => {\r\n    history.push(`/armor/${armorType.armorTypeID}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select Armor Type</h2>\r\n      <div className=\"armor-type-container\">\r\n        {armorTypes.map((armorType) => (\r\n          <a\r\n            key={armorType.armorTypeID}\r\n            href={`#/armor/${armorType.armorTypeID}`}\r\n            onClick={() => handleSelectArmorType(armorType)}\r\n            className=\"armor-type-link\" // Add a CSS class for styling\r\n          >\r\n            {armorType.armorTypeName}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArmorTypePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iBAAiB,CAAC;QACnDH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,qBAAqB,GAAIC,SAAS,IAAK;IAC3CX,OAAO,CAACY,IAAI,CAAE,UAASD,SAAS,CAACE,WAAY,EAAC,CAAC;EACjD,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAKqB,SAAS,EAAC,sBAAsB;MAAAL,QAAA,EAClCZ,UAAU,CAACkB,GAAG,CAAET,SAAS,iBACxBb,OAAA;QAEEuB,IAAI,EAAG,WAAUV,SAAS,CAACE,WAAY,EAAE;QACzCS,OAAO,EAAEA,CAAA,KAAMZ,qBAAqB,CAACC,SAAS,CAAE;QAChDQ,SAAS,EAAC,iBAAiB,CAAC;QAAA;QAAAL,QAAA,EAE3BH,SAAS,CAACY;MAAa,GALnBZ,SAAS,CAACE,WAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMzB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjB,EAAA,CArCQF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
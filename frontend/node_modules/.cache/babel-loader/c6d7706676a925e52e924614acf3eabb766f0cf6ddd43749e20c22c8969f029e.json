{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-hasnaindb\\\\frontend\\\\src\\\\ArmorTypePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArmorTypePage() {\n  _s();\n  // State variables\n  const [armorTypes, setArmorTypes] = useState([]);\n  const [selectedArmorType, setSelectedArmorType] = useState(null);\n  const [armorItems, setArmorItems] = useState([]);\n\n  // Effect hook to fetch armor types from the backend\n  useEffect(() => {\n    const fetchArmorTypesAndItems = async () => {\n      try {\n        const responseTypes = await axios.get('/api/armorTypes');\n        setArmorTypes(responseTypes.data);\n      } catch (error) {\n        console.error('Error fetching armor types and items:', error);\n      }\n      // Fetch all armor regardless of type\n      try {\n        const responseItems = await axios.get('/api/allArmorItems');\n        setArmorItems(responseItems.data);\n      } catch (error) {\n        console.error('Error fetching all armor:', error);\n      }\n    };\n    fetchArmorTypesAndItems();\n  }, []);\n\n  // Function to handle selecting an armor type\n  const handleSelectArmorType = async armorType => {\n    setSelectedArmorType(armorType);\n    try {\n      const response = await axios.get(`/api/armorByType/${armorType.armorTypeID}`);\n      setArmorItems(response.data);\n    } catch (error) {\n      console.error('Error fetching armor items by type:', error);\n      setArmorItems([]);\n    }\n  };\n\n  // Function to handle clicking on the \"reset\" button\n  const handleArmorButtonClick = async () => {\n    setSelectedArmorType(null); // Deselect armor type\n    try {\n      const response = await axios.get('/api/allArmorItems');\n      setArmorItems(response.data);\n    } catch (error) {\n      console.error('Error fetching all armor items:', error);\n      setArmorItems([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Armor Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: armorTypes.map(armorType => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: selectedArmorType === armorType ? 'active' : '',\n        onClick: () => handleSelectArmorType(armorType),\n        href: `#${armorType.armorTypeName}`,\n        children: armorType.armorTypeName\n      }, armorType.armorTypeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Armor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleArmorButtonClick,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"armor-items\",\n        children: armorItems.map(armorItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"armor-item\",\n          style: {\n            marginTop: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: armorItem.armorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${armorItem.filepath}`,\n            alt: armorItem.armorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Armor Type: \", armorItem.armorTypeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Physical Defense: \", armorItem.physicalDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blunt Defense: \", armorItem.bluntDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Thrust Defense: \", armorItem.thrustDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bloodtinge Defense: \", armorItem.bloodtingeDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Arcane Defense: \", armorItem.arcaneDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fire Defense: \", armorItem.fireDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bolt Defense: \", armorItem.boltDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Slow Poison Resistance: \", armorItem.slowPoisonResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fast Poison Resistance: \", armorItem.fastPoisonResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Frenzy Resistance: \", armorItem.frenzyResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Beasthood Resistance: \", armorItem.beasthoodResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, armorItem.armorID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ArmorTypePage, \"/pW4xi7hbosak5Jlpis9kmz1AJk=\");\n_c = ArmorTypePage;\nexport default ArmorTypePage;\nvar _c;\n$RefreshReg$(_c, \"ArmorTypePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ArmorTypePage","_s","armorTypes","setArmorTypes","selectedArmorType","setSelectedArmorType","armorItems","setArmorItems","fetchArmorTypesAndItems","responseTypes","get","data","error","console","responseItems","handleSelectArmorType","armorType","response","armorTypeID","handleArmorButtonClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","href","armorTypeName","armorItem","style","marginTop","armorName","src","filepath","alt","physicalDefense","bluntDefense","thrustDefense","bloodtingeDefense","arcaneDefense","fireDefense","boltDefense","slowPoisonResistance","fastPoisonResistance","frenzyResistance","beasthoodResistance","armorID","_c","$RefreshReg$"],"sources":["D:/project-hasnaindb/frontend/src/ArmorTypePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ArmorTypePage() {\r\n  // State variables\r\n  const [armorTypes, setArmorTypes] = useState([]);\r\n  const [selectedArmorType, setSelectedArmorType] = useState(null);\r\n  const [armorItems, setArmorItems] = useState([]);\r\n\r\n  // Effect hook to fetch armor types from the backend\r\n  useEffect(() => {\r\n    const fetchArmorTypesAndItems = async () => {\r\n      try {\r\n        const responseTypes = await axios.get('/api/armorTypes');\r\n        setArmorTypes(responseTypes.data);\r\n      } catch (error) {\r\n        console.error('Error fetching armor types and items:', error);\r\n      }\r\n      // Fetch all armor regardless of type\r\n      try {\r\n        const responseItems = await axios.get('/api/allArmorItems');\r\n        setArmorItems(responseItems.data);\r\n      } catch (error) {\r\n        console.error('Error fetching all armor:', error);\r\n      }\r\n  };\r\n\r\n  fetchArmorTypesAndItems();\r\n}, []);\r\n\r\n  // Function to handle selecting an armor type\r\n  const handleSelectArmorType = async (armorType) => {\r\n    setSelectedArmorType(armorType);\r\n\r\n    try {\r\n      const response = await axios.get(`/api/armorByType/${armorType.armorTypeID}`);\r\n      setArmorItems(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching armor items by type:', error);\r\n      setArmorItems([]);\r\n    }\r\n  };\r\n\r\n  // Function to handle clicking on the \"reset\" button\r\n  const handleArmorButtonClick = async () => {\r\n    setSelectedArmorType(null); // Deselect armor type\r\n    try {\r\n      const response = await axios.get('/api/allArmorItems');\r\n      setArmorItems(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching all armor items:', error);\r\n      setArmorItems([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select Armor Type</h2>\r\n      <div className=\"links\">\r\n        {/* Render each armor type as a clickable link */}\r\n        {armorTypes.map((armorType) => (\r\n          <a\r\n            key={armorType.armorTypeID}\r\n            className={selectedArmorType === armorType ? 'active' : ''}\r\n            onClick={() => handleSelectArmorType(armorType)}\r\n            href={`#${armorType.armorTypeName}`}\r\n          >\r\n            {armorType.armorTypeName}\r\n          </a>\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <h2>Armor</h2>\r\n\t<button className=\"reset-button\" onClick={handleArmorButtonClick}>Reset</button>\r\n        <div className=\"armor-items\">\r\n          {armorItems.map((armorItem) => (\r\n            <div key={armorItem.armorID} className=\"armor-item\" style={{ marginTop: '60px' }}>\r\n              <h3>{armorItem.armorName}</h3>\r\n              <img src={`data:image/png;base64,${armorItem.filepath}`} alt={armorItem.armorName} />\r\n              <p>Armor Type: {armorItem.armorTypeName}</p>\r\n              <p>Physical Defense: {armorItem.physicalDefense}</p>\r\n              <p>Blunt Defense: {armorItem.bluntDefense}</p>\r\n              <p>Thrust Defense: {armorItem.thrustDefense}</p>\r\n              <p>Bloodtinge Defense: {armorItem.bloodtingeDefense}</p>\r\n              <p>Arcane Defense: {armorItem.arcaneDefense}</p>\r\n              <p>Fire Defense: {armorItem.fireDefense}</p>\r\n              <p>Bolt Defense: {armorItem.boltDefense}</p>\r\n              <p>Slow Poison Resistance: {armorItem.slowPoisonResistance}</p>\r\n              <p>Fast Poison Resistance: {armorItem.fastPoisonResistance}</p>\r\n              <p>Frenzy Resistance: {armorItem.frenzyResistance}</p>\r\n              <p>Beasthood Resistance: {armorItem.beasthoodResistance}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArmorTypePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
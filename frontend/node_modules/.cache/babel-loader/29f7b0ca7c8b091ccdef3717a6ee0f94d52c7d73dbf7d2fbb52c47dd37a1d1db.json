{"ast":null,"code":"var _jsxFileName = \"D:\\\\CMSC 461 Project Hasnain Ali\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to store the message from the backend\n  const [message, setMessage] = useState('');\n\n  // useEffect hook to fetch data from the backend when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make GET request to Flask backend\n        const response = await axios.get('/api/data');\n        // Set the message from the response data\n        setMessage(response.data.message);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // Empty dependency array to ensure this effect runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","message","setMessage","fetchData","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CMSC 461 Project Hasnain Ali/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  // State to store the message from the backend\n  const [message, setMessage] = useState('');\n\n  // useEffect hook to fetch data from the backend when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Make GET request to Flask backend\n        const response = await axios.get('/api/data');\n        // Set the message from the response data\n        setMessage(response.data.message);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array to ensure this effect runs only once\n\n  return (\n    <div className=\"App\">\n      {/* Display the message from the backend */}\n      <h1>{message}</h1>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,WAAW,CAAC;QAC7C;QACAH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACL,OAAO,CAAC;MACnC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDJ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,eAElBZ,OAAA;MAAAY,QAAA,EAAKT;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACd,EAAA,CA1BQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
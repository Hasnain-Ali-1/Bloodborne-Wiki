{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-hasnaindb\\\\frontend\\\\src\\\\ArmorTypePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArmorTypePage() {\n  _s();\n  // State variables\n  const [armorTypes, setArmorTypes] = useState([]);\n  const [selectedArmorType, setSelectedArmorType] = useState(null);\n  const [armorItems, setArmorItems] = useState([]);\n  const [allArmorItems, setAllArmorItems] = useState([]);\n\n  // Function to fetch armor types and all armor items\n  const fetchArmorData = async () => {\n    try {\n      const [armorTypesResponse, allArmorResponse] = await Promise.all([axios.get('/api/armorTypes'), axios.get('/api/allArmorItems')]);\n      setArmorTypes(armorTypesResponse.data);\n      setAllArmorItems(allArmorResponse.data);\n    } catch (error) {\n      console.error('Error fetching armor data:', error);\n    }\n  };\n\n  // Function to handle selecting an armor type\n  const handleSelectArmorType = armorType => {\n    setSelectedArmorType(armorType);\n    if (armorType === 'All Armor') {\n      setArmorItems(allArmorItems);\n    } else {\n      const filteredArmor = allArmorItems.filter(armor => armor.armorTypeName === armorType.armorTypeName);\n      setArmorItems(filteredArmor);\n    }\n  };\n\n  // Effect hook to fetch armor types and all armor items from the backend\n  useEffect(() => {\n    fetchArmorData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Armor Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: [armorTypes.map(armorType => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: selectedArmorType === armorType ? 'active' : '',\n        onClick: () => handleSelectArmorType(armorType),\n        href: `#${armorType.armorTypeName}`,\n        children: armorType.armorTypeName\n      }, armorType.armorTypeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: selectedArmorType === 'All Armor' ? 'active' : '',\n        onClick: () => handleSelectArmorType('All Armor'),\n        href: \"#all-armor\",\n        children: \"All Armor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Armor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"armor-items\",\n        children: armorItems.map(armorItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"armor-item\",\n          style: {\n            marginTop: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: armorItem.armorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${armorItem.filepath}`,\n            alt: armorItem.armorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Armor Type: \", armorItem.armorTypeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Physical Defense: \", armorItem.physicalDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blunt Defense: \", armorItem.bluntDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Thrust Defense: \", armorItem.thrustDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bloodtinge Defense: \", armorItem.bloodtingeDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Arcane Defense: \", armorItem.arcaneDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fire Defense: \", armorItem.fireDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bolt Defense: \", armorItem.boltDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Slow Poison Resistance: \", armorItem.slowPoisonResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fast Poison Resistance: \", armorItem.fastPoisonResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Frenzy Resistance: \", armorItem.frenzyResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Beasthood Resistance: \", armorItem.beasthoodResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, armorItem.armorID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ArmorTypePage, \"LQFEUMwPnCgBv2fGb4MF7U2onGc=\");\n_c = ArmorTypePage;\nexport default ArmorTypePage;\nvar _c;\n$RefreshReg$(_c, \"ArmorTypePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ArmorTypePage","_s","armorTypes","setArmorTypes","selectedArmorType","setSelectedArmorType","armorItems","setArmorItems","allArmorItems","setAllArmorItems","fetchArmorData","armorTypesResponse","allArmorResponse","Promise","all","get","data","error","console","handleSelectArmorType","armorType","filteredArmor","filter","armor","armorTypeName","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","href","armorTypeID","armorItem","style","marginTop","armorName","src","filepath","alt","physicalDefense","bluntDefense","thrustDefense","bloodtingeDefense","arcaneDefense","fireDefense","boltDefense","slowPoisonResistance","fastPoisonResistance","frenzyResistance","beasthoodResistance","armorID","_c","$RefreshReg$"],"sources":["D:/project-hasnaindb/frontend/src/ArmorTypePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ArmorTypePage() {\r\n  // State variables\r\n  const [armorTypes, setArmorTypes] = useState([]);\r\n  const [selectedArmorType, setSelectedArmorType] = useState(null);\r\n  const [armorItems, setArmorItems] = useState([]);\r\n  const [allArmorItems, setAllArmorItems] = useState([]);\r\n\r\n  // Function to fetch armor types and all armor items\r\n  const fetchArmorData = async () => {\r\n    try {\r\n      const [armorTypesResponse, allArmorResponse] = await Promise.all([\r\n        axios.get('/api/armorTypes'),\r\n        axios.get('/api/allArmorItems')\r\n      ]);\r\n      setArmorTypes(armorTypesResponse.data);\r\n      setAllArmorItems(allArmorResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching armor data:', error);\r\n    }\r\n  };\r\n\r\n  // Function to handle selecting an armor type\r\n  const handleSelectArmorType = (armorType) => {\r\n    setSelectedArmorType(armorType);\r\n    if (armorType === 'All Armor') {\r\n      setArmorItems(allArmorItems);\r\n    } else {\r\n      const filteredArmor = allArmorItems.filter((armor) => armor.armorTypeName === armorType.armorTypeName);\r\n      setArmorItems(filteredArmor);\r\n    }\r\n  };\r\n\r\n  // Effect hook to fetch armor types and all armor items from the backend\r\n  useEffect(() => {\r\n    fetchArmorData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select Armor Type</h2>\r\n      <div className=\"links\">\r\n        {/* Render each armor type as a clickable link */}\r\n        {armorTypes.map((armorType) => (\r\n          <a\r\n            key={armorType.armorTypeID}\r\n            className={selectedArmorType === armorType ? 'active' : ''}\r\n            onClick={() => handleSelectArmorType(armorType)}\r\n            href={`#${armorType.armorTypeName}`}\r\n          >\r\n            {armorType.armorTypeName}\r\n          </a>\r\n        ))}\r\n        <a\r\n          className={selectedArmorType === 'All Armor' ? 'active' : ''}\r\n          onClick={() => handleSelectArmorType('All Armor')}\r\n          href=\"#all-armor\"\r\n        >\r\n          All Armor\r\n        </a>\r\n      </div>\r\n      <div>\r\n        <h2>Armor</h2>\r\n        <div className=\"armor-items\">\r\n          {armorItems.map((armorItem) => (\r\n            <div key={armorItem.armorID} className=\"armor-item\" style={{ marginTop: '60px' }}>\r\n              <h3>{armorItem.armorName}</h3>\r\n              <img src={`data:image/png;base64,${armorItem.filepath}`} alt={armorItem.armorName} />\r\n              <p>Armor Type: {armorItem.armorTypeName}</p>\r\n              <p>Physical Defense: {armorItem.physicalDefense}</p>\r\n              <p>Blunt Defense: {armorItem.bluntDefense}</p>\r\n              <p>Thrust Defense: {armorItem.thrustDefense}</p>\r\n              <p>Bloodtinge Defense: {armorItem.bloodtingeDefense}</p>\r\n              <p>Arcane Defense: {armorItem.arcaneDefense}</p>\r\n              <p>Fire Defense: {armorItem.fireDefense}</p>\r\n              <p>Bolt Defense: {armorItem.boltDefense}</p>\r\n              <p>Slow Poison Resistance: {armorItem.slowPoisonResistance}</p>\r\n              <p>Fast Poison Resistance: {armorItem.fastPoisonResistance}</p>\r\n              <p>Frenzy Resistance: {armorItem.frenzyResistance}</p>\r\n              <p>Beasthood Resistance: {armorItem.beasthoodResistance}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArmorTypePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-hasnaindb\\\\frontend\\\\src\\\\ArmorTypePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ArmorTypePage() {\n  _s();\n  const [armorTypes, setArmorTypes] = useState([]);\n  const [selectedArmorType, setSelectedArmorType] = useState(null);\n  const [armorItems, setArmorItems] = useState([]);\n  useEffect(() => {\n    const fetchArmorTypes = async () => {\n      try {\n        const response = await axios.get('/api/armorTypes');\n        setArmorTypes(response.data);\n      } catch (error) {\n        console.error('Error fetching armor types:', error);\n      }\n    };\n    fetchArmorTypes();\n    const fetchAllArmorItems = async () => {\n      try {\n        const response = await axios.get('/api/allArmorItems');\n        console.log('All armor items:', response.data); // Log the response data\n        setArmorItems(response.data);\n      } catch (error) {\n        console.error('Error fetching all armor items:', error);\n      }\n    };\n    fetchAllArmorItems();\n  }, []); // Fetch all armor items when the component mounts\n\n  const handleSelectArmorType = async armorType => {\n    setSelectedArmorType(armorType);\n    try {\n      const response = await axios.get(`/api/armorByType/${armorType.armorTypeID}`);\n      console.log('Armor items by type:', response.data); // Log the response data\n      setArmorItems(response.data);\n    } catch (error) {\n      console.error('Error fetching armor items by type:', error);\n      setArmorItems([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select Armor Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links\",\n      children: [armorTypes.map(armorType => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: selectedArmorType === armorType ? 'active' : '',\n        onClick: () => handleSelectArmorType(armorType),\n        href: `#${armorType.armorTypeName}`,\n        children: armorType.armorTypeName\n      }, armorType.armorTypeID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#armor\",\n        onClick: handleArmorLinkClick,\n        children: \"Armor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Armor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"armor-items\",\n        children: armorItems.map(armorItem => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"armor-item\",\n          style: {\n            marginTop: '60px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: armorItem.armorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/png;base64,${armorItem.filepath}`,\n            alt: armorItem.armorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Armor Type: \", armorItem.armorTypeName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Physical Defense: \", armorItem.physicalDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Blunt Defense: \", armorItem.bluntDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Thrust Defense: \", armorItem.thrustDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bloodtinge Defense: \", armorItem.bloodtingeDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Arcane Defense: \", armorItem.arcaneDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fire Defense: \", armorItem.fireDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Bolt Defense: \", armorItem.boltDefense]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Slow Poison Resistance: \", armorItem.slowPoisonResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fast Poison Resistance: \", armorItem.fastPoisonResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Frenzy Resistance: \", armorItem.frenzyResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Beasthood Resistance: \", armorItem.beasthoodResistance]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, armorItem.armorID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(ArmorTypePage, \"/pW4xi7hbosak5Jlpis9kmz1AJk=\");\n_c = ArmorTypePage;\nexport default ArmorTypePage;\nvar _c;\n$RefreshReg$(_c, \"ArmorTypePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ArmorTypePage","_s","armorTypes","setArmorTypes","selectedArmorType","setSelectedArmorType","armorItems","setArmorItems","fetchArmorTypes","response","get","data","error","console","fetchAllArmorItems","log","handleSelectArmorType","armorType","armorTypeID","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","href","armorTypeName","handleArmorLinkClick","armorItem","style","marginTop","armorName","src","filepath","alt","physicalDefense","bluntDefense","thrustDefense","bloodtingeDefense","arcaneDefense","fireDefense","boltDefense","slowPoisonResistance","fastPoisonResistance","frenzyResistance","beasthoodResistance","armorID","_c","$RefreshReg$"],"sources":["D:/project-hasnaindb/frontend/src/ArmorTypePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction ArmorTypePage() {\r\n  const [armorTypes, setArmorTypes] = useState([]);\r\n  const [selectedArmorType, setSelectedArmorType] = useState(null);\r\n  const [armorItems, setArmorItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchArmorTypes = async () => {\r\n      try {\r\n        const response = await axios.get('/api/armorTypes');\r\n        setArmorTypes(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching armor types:', error);\r\n      }\r\n    };\r\n\r\n    fetchArmorTypes();\r\n\r\n    const fetchAllArmorItems = async () => {\r\n      try {\r\n        const response = await axios.get('/api/allArmorItems');\r\n        console.log('All armor items:', response.data); // Log the response data\r\n        setArmorItems(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching all armor items:', error);\r\n      }\r\n    };\r\n\r\n    fetchAllArmorItems();\r\n  }, []); // Fetch all armor items when the component mounts\r\n\r\n  const handleSelectArmorType = async (armorType) => {\r\n    setSelectedArmorType(armorType);\r\n\r\n    try {\r\n      const response = await axios.get(`/api/armorByType/${armorType.armorTypeID}`);\r\n      console.log('Armor items by type:', response.data); // Log the response data\r\n      setArmorItems(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching armor items by type:', error);\r\n      setArmorItems([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Select Armor Type</h2>\r\n      <div className=\"links\">\r\n        {/* Render each armor type as a clickable link */}\r\n        {armorTypes.map((armorType) => (\r\n          <a\r\n            key={armorType.armorTypeID}\r\n            className={selectedArmorType === armorType ? 'active' : ''}\r\n            onClick={() => handleSelectArmorType(armorType)}\r\n            href={`#${armorType.armorTypeName}`}\r\n          >\r\n            {armorType.armorTypeName}\r\n          </a>\r\n        ))}\r\n        {/* Render \"Armor\" link with onClick event */}\r\n        <a href=\"#armor\" onClick={handleArmorLinkClick}>Armor</a>\r\n      </div>\r\n      <div>\r\n        <h2>Armor</h2>\r\n        <div className=\"armor-items\">\r\n          {armorItems.map((armorItem) => (\r\n            <div key={armorItem.armorID} className=\"armor-item\" style={{ marginTop: '60px' }}>\r\n              <h3>{armorItem.armorName}</h3>\r\n              <img src={`data:image/png;base64,${armorItem.filepath}`} alt={armorItem.armorName} />\r\n              <p>Armor Type: {armorItem.armorTypeName}</p>\r\n              <p>Physical Defense: {armorItem.physicalDefense}</p>\r\n              <p>Blunt Defense: {armorItem.bluntDefense}</p>\r\n              <p>Thrust Defense: {armorItem.thrustDefense}</p>\r\n              <p>Bloodtinge Defense: {armorItem.bloodtingeDefense}</p>\r\n              <p>Arcane Defense: {armorItem.arcaneDefense}</p>\r\n              <p>Fire Defense: {armorItem.fireDefense}</p>\r\n              <p>Bolt Defense: {armorItem.boltDefense}</p>\r\n              <p>Slow Poison Resistance: {armorItem.slowPoisonResistance}</p>\r\n              <p>Fast Poison Resistance: {armorItem.fastPoisonResistance}</p>\r\n              <p>Frenzy Resistance: {armorItem.frenzyResistance}</p>\r\n              <p>Beasthood Resistance: {armorItem.beasthoodResistance}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArmorTypePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}